import os
import time

from threading import Thread

from flask import Flask
from flask import (
    request, render_template
    )




def create_app(test_config=None):
    # create and configure the app
    app = Flask(__name__, instance_relative_config=True)
    app.config.from_mapping(
        SECRET_KEY='dev',
        DATABASE=os.path.join(app.instance_path, 'whereis_app.sqlite'),
    )

    if test_config is None:
        # load the instance config, if it exists, when not testing
        app.config.from_pyfile('config.py', silent=True)
    else:
        # load the test config if passed in
        app.config.from_mapping(test_config)

    # ensure the instance folder exists
    try:
        os.makedirs(app.instance_path)
    except OSError:
        pass


    # app endpoints

    # a simple page that says hello
    @app.route('/index')
    def index():
        return render_template('index.html')


    from . import db
    db.init_app(app)


    from . import auth
    app.register_blueprint(auth.bp)


    from . import locations
    app.register_blueprint(locations.bp)
    app.add_url_rule('/', endpoint='index')

    from . import email_listener
    app.register_blueprint(email_listener.bp)
    def listen_for_emails():
        while True:
            time.sleep(100)
            with app.app_context():
                email_listener.main()


    t1 = Thread(target = listen_for_emails)
    t1.setDaemon(True)
    t1.start()



    return app
